<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.net.apps.powerplant.server.db.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.net.apps.powerplant.server.db.UserDb">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="PLANT_TYPE_ID" jdbcType="INTEGER" property="plantTypeId" />
    <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
    <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
    <result column="USER_STATUS" jdbcType="VARCHAR" property="userStatus" />
    <result column="TOKEN" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PLANT_TYPE_ID, FIRST_NAME, LAST_NAME, USER_STATUS, TOKEN
  </sql>
  <select id="selectByExample" parameterType="com.net.apps.powerplant.server.db.UserDbExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_USER
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from T_USER
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.net.apps.powerplant.server.db.UserDbExample">
    delete from T_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.net.apps.powerplant.server.db.UserDb">
    insert into T_USER (ID, PLANT_TYPE_ID, FIRST_NAME, 
      LAST_NAME, USER_STATUS, TOKEN
      )
    values (#{id,jdbcType=INTEGER}, #{plantTypeId,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR}, 
      #{lastName,jdbcType=VARCHAR}, #{userStatus,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.net.apps.powerplant.server.db.UserDb">
    insert into T_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="plantTypeId != null">
        PLANT_TYPE_ID,
      </if>
      <if test="firstName != null">
        FIRST_NAME,
      </if>
      <if test="lastName != null">
        LAST_NAME,
      </if>
      <if test="userStatus != null">
        USER_STATUS,
      </if>
      <if test="token != null">
        TOKEN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="plantTypeId != null">
        #{plantTypeId,jdbcType=INTEGER},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.net.apps.powerplant.server.db.UserDbExample" resultType="java.lang.Long">
    select count(*) from T_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_USER
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.plantTypeId != null">
        PLANT_TYPE_ID = #{record.plantTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.firstName != null">
        FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null">
        LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null">
        USER_STATUS = #{record.userStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        TOKEN = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_USER
    set ID = #{record.id,jdbcType=INTEGER},
      PLANT_TYPE_ID = #{record.plantTypeId,jdbcType=INTEGER},
      FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
      LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
      USER_STATUS = #{record.userStatus,jdbcType=VARCHAR},
      TOKEN = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.net.apps.powerplant.server.db.UserDb">
    update T_USER
    <set>
      <if test="plantTypeId != null">
        PLANT_TYPE_ID = #{plantTypeId,jdbcType=INTEGER},
      </if>
      <if test="firstName != null">
        FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        LAST_NAME = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        USER_STATUS = #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        TOKEN = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.net.apps.powerplant.server.db.UserDb">
    update T_USER
    set PLANT_TYPE_ID = #{plantTypeId,jdbcType=INTEGER},
      FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      LAST_NAME = #{lastName,jdbcType=VARCHAR},
      USER_STATUS = #{userStatus,jdbcType=VARCHAR},
      TOKEN = #{token,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>